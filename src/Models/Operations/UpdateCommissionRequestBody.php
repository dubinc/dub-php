<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Dub\Models\Operations;


class UpdateCommissionRequestBody
{
    /**
     * The new absolute amount for the sale. Paid commissions cannot be updated.
     *
     * @var ?float $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $amount = null;

    /**
     * Modify the current sale amount: use positive values to increase the amount, negative values to decrease it. Takes precedence over `amount`. Paid commissions cannot be updated.
     *
     * @var ?float $modifyAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('modifyAmount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $modifyAmount = null;

    /**
     * Useful for marking a commission as refunded, duplicate, canceled, or fraudulent. Takes precedence over `amount` and `modifyAmount`. When a commission is marked as refunded, duplicate, canceled, or fraudulent, it will be omitted from the payout, and the payout amount will be recalculated accordingly. Paid commissions cannot be updated.
     *
     * @var ?Status $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Dub\Models\Operations\Status|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Status $status = null;

    /**
     * The currency of the sale amount to update. Accepts ISO 4217 currency codes.
     *
     * @var ?string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $currency = null;

    /**
     * @param  ?float  $amount
     * @param  ?float  $modifyAmount
     * @param  ?string  $currency
     * @param  ?Status  $status
     * @phpstan-pure
     */
    public function __construct(?float $amount = null, ?float $modifyAmount = null, ?Status $status = null, ?string $currency = 'usd')
    {
        $this->amount = $amount;
        $this->modifyAmount = $modifyAmount;
        $this->status = $status;
        $this->currency = $currency;
    }
}