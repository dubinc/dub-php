<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Dub\Models\Operations;


class TrackLeadRequestBody
{
    /**
     * The ID of the click in th Dub. You can read this value from `dub_id` cookie.
     *
     * @var string $clickId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('clickId')]
    public string $clickId;

    /**
     * The name of the event to track.
     *
     * @var string $eventName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('eventName')]
    public string $eventName;

    /**
     * Additional metadata to be stored with the lead event
     *
     * @var ?array<string, mixed> $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $metadata = null;

    /**
     * This is the unique identifier for the customer in the client's app. This is used to track the customer's journey.
     *
     * @var ?string $externalId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('externalId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $externalId = null;

    /**
     * This is the unique identifier for the customer in the client's app. This is used to track the customer's journey.
     *
     * @var ?string $customerId
     * @deprecated  field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customerId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $customerId = null;

    /**
     * Name of the customer in the client's app.
     *
     * @var ?string $customerName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customerName')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $customerName = null;

    /**
     * Email of the customer in the client's app.
     *
     * @var ?string $customerEmail
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customerEmail')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $customerEmail = null;

    /**
     * Avatar of the customer in the client's app.
     *
     * @var ?string $customerAvatar
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customerAvatar')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $customerAvatar = null;

    /**
     * @param  string  $clickId
     * @param  string  $eventName
     * @param  ?string  $externalId
     * @param  ?string  $customerId
     * @param  ?string  $customerName
     * @param  ?string  $customerEmail
     * @param  ?string  $customerAvatar
     * @param  ?array<string, mixed>  $metadata
     */
    public function __construct(string $clickId, string $eventName, ?array $metadata = null, ?string $externalId = '', ?string $customerId = null, ?string $customerName = null, ?string $customerEmail = null, ?string $customerAvatar = null)
    {
        $this->clickId = $clickId;
        $this->eventName = $eventName;
        $this->metadata = $metadata;
        $this->externalId = $externalId;
        $this->customerId = $customerId;
        $this->customerName = $customerName;
        $this->customerEmail = $customerEmail;
        $this->customerAvatar = $customerAvatar;
    }
}