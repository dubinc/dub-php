<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Dub\Models\Operations;


class TrackSaleRequestBody
{
    /**
     * This is the unique identifier for the customer in the client's app. This is used to track the customer's journey.
     *
     * @var string $customerId
     */
    #[\JMS\Serializer\Annotation\SerializedName('customerId')]
    public string $customerId;

    /**
     * The amount of the sale. Should be passed in cents.
     *
     * @var int $amount
     */
    #[\JMS\Serializer\Annotation\SerializedName('amount')]
    public int $amount;

    /**
     * The payment processor via which the sale was made.
     *
     * @var PaymentProcessor $paymentProcessor
     */
    #[\JMS\Serializer\Annotation\SerializedName('paymentProcessor')]
    #[\JMS\Serializer\Annotation\Type('\Dub\Models\Operations\PaymentProcessor')]
    public PaymentProcessor $paymentProcessor;

    /**
     * The name of the sale event. It can be used to track different types of event for example 'Purchase', 'Upgrade', 'Payment', etc.
     *
     * @var ?string $eventName
     */
    #[\JMS\Serializer\Annotation\SerializedName('eventName')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $eventName = null;

    /**
     * The invoice ID of the sale.
     *
     * @var ?string $invoiceId
     */
    #[\JMS\Serializer\Annotation\SerializedName('invoiceId')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $invoiceId = null;

    /**
     * The currency of the sale. Accepts ISO 4217 currency codes.
     *
     * @var ?string $currency
     */
    #[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $currency = null;

    /**
     * Additional metadata to be stored with the sale event.
     *
     * @var ?array<string, mixed> $metadata
     */
    #[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?array $metadata = null;

    /**
     * @param  string  $customerId
     * @param  int  $amount
     * @param  PaymentProcessor  $paymentProcessor
     * @param  ?string  $eventName
     * @param  ?string  $currency
     * @param  ?string  $invoiceId
     * @param  ?array<string, mixed>  $metadata
     */
    public function __construct(string $customerId, int $amount, PaymentProcessor $paymentProcessor, ?array $metadata = null, ?string $eventName = 'Purchase', ?string $currency = 'usd', ?string $invoiceId = null)
    {
        $this->customerId = $customerId;
        $this->amount = $amount;
        $this->paymentProcessor = $paymentProcessor;
        $this->eventName = $eventName;
        $this->currency = $currency;
        $this->invoiceId = $invoiceId;
        $this->metadata = $metadata;
    }
}