<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Dub\Models\Operations;

use Dub\Utils\SpeakeasyMetadata;
class GetLinksRequest
{
    /**
     * The domain to filter the links by. E.g. `ac.me`. If not provided, all links for the workspace will be returned.
     *
     * @var ?string $domain
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=domain')]
    public ?string $domain = null;

    /**
     * Deprecated. Use `tagIds` instead. The tag ID to filter the links by.
     *
     * @var ?string $tagId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=tagId')]
    public ?string $tagId = null;

    /**
     * The tag IDs to filter the links by.
     *
     * @var string|array<string>|null $tagIds
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=false,name=tagIds')]
    public string|array|null $tagIds = null;

    /**
     * The unique name of the tags assigned to the short link (case insensitive).
     *
     * @var string|array<string>|null $tagNames
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=false,name=tagNames')]
    public string|array|null $tagNames = null;

    /**
     * The folder ID to filter the links by.
     *
     * @var ?string $folderId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=folderId')]
    public ?string $folderId = null;

    /**
     * The search term to filter the links by. The search term will be matched against the short link slug and the destination url.
     *
     * @var ?string $search
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=search')]
    public ?string $search = null;

    /**
     * The user ID to filter the links by.
     *
     * @var ?string $userId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=userId')]
    public ?string $userId = null;

    /**
     * The ID of the tenant that created the link inside your system. If set, will only return links for the specified tenant.
     *
     * @var ?string $tenantId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=tenantId')]
    public ?string $tenantId = null;

    /**
     * Whether to include archived links in the response. Defaults to `false` if not provided.
     *
     * @var ?bool $showArchived
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=showArchived')]
    public ?bool $showArchived = null;

    /**
     * DEPRECATED. Filter for links that have at least one tag assigned to them.
     *
     * @var ?bool $withTags
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=withTags')]
    public ?bool $withTags = null;

    /**
     * The field to sort the links by. The default is `createdAt`.
     *
     * @var ?SortBy $sortBy
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sortBy')]
    public ?SortBy $sortBy = null;

    /**
     * The sort order. The default is `desc`.
     *
     * @var ?SortOrder $sortOrder
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sortOrder')]
    public ?SortOrder $sortOrder = null;

    /**
     * DEPRECATED. Use `sortBy` instead.
     *
     * @var ?Sort $sort
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?Sort $sort = null;

    /**
     * The page number for pagination.
     *
     * @var ?float $page
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?float $page = null;

    /**
     * The number of items per page.
     *
     * @var ?float $pageSize
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=pageSize')]
    public ?float $pageSize = null;

    /**
     * @param  ?string  $domain
     * @param  ?string  $tagId
     * @param  string|array<string>|null  $tagIds
     * @param  string|array<string>|null  $tagNames
     * @param  ?string  $folderId
     * @param  ?string  $search
     * @param  ?string  $userId
     * @param  ?string  $tenantId
     * @param  ?bool  $showArchived
     * @param  ?bool  $withTags
     * @param  ?SortBy  $sortBy
     * @param  ?SortOrder  $sortOrder
     * @param  ?Sort  $sort
     * @param  ?float  $page
     * @param  ?float  $pageSize
     * @phpstan-pure
     */
    public function __construct(?string $domain = null, ?string $tagId = null, string|array|null $tagIds = null, string|array|null $tagNames = null, ?string $folderId = null, ?string $search = null, ?string $userId = null, ?string $tenantId = null, ?bool $showArchived = true, ?bool $withTags = true, ?SortBy $sortBy = SortBy::CreatedAt, ?SortOrder $sortOrder = SortOrder::Desc, ?Sort $sort = Sort::CreatedAt, ?float $page = 1, ?float $pageSize = 100)
    {
        $this->domain = $domain;
        $this->tagId = $tagId;
        $this->tagIds = $tagIds;
        $this->tagNames = $tagNames;
        $this->folderId = $folderId;
        $this->search = $search;
        $this->userId = $userId;
        $this->tenantId = $tenantId;
        $this->showArchived = $showArchived;
        $this->withTags = $withTags;
        $this->sortBy = $sortBy;
        $this->sortOrder = $sortOrder;
        $this->sort = $sort;
        $this->page = $page;
        $this->pageSize = $pageSize;
    }
}