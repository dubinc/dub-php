<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Dub\Models\Components;


class FolderSchema
{
    /**
     * The unique ID of the folder.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * The name of the folder.
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     *
     * @var Type $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Dub\Models\Components\Type')]
    public Type $type;

    /**
     * The date the folder was created.
     *
     * @var string $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdAt')]
    public string $createdAt;

    /**
     * The date the folder was updated.
     *
     * @var string $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updatedAt')]
    public string $updatedAt;

    /**
     * The access level of the folder within the workspace.
     *
     * @var ?AccessLevel $accessLevel
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('accessLevel')]
    #[\Speakeasy\Serializer\Annotation\Type('\Dub\Models\Components\AccessLevel|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?AccessLevel $accessLevel = null;

    /**
     * @param  string  $id
     * @param  string  $name
     * @param  Type  $type
     * @param  string  $createdAt
     * @param  string  $updatedAt
     * @param  ?AccessLevel  $accessLevel
     * @phpstan-pure
     */
    public function __construct(string $id, string $name, Type $type, string $createdAt, string $updatedAt, ?AccessLevel $accessLevel = null)
    {
        $this->id = $id;
        $this->name = $name;
        $this->type = $type;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->accessLevel = $accessLevel;
    }
}